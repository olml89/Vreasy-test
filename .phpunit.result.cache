C:37:"PHPUnit\Runner\DefaultTestResultCache":8038:{a:2:{s:7:"defects";a:23:{s:43:"PaginationTest::testAssertGetLimitIsCorrect";i:4;s:7:"Warning";i:6;s:78:"PaginationTest::testAssertCurrentPageAfterSettingUnpaginatedResultSetIsCorrect";i:3;s:75:"PaginationTest::testAssertPrevPageAfterSettingUnpaginatedResultSetIsCorrect";i:3;s:82:"RequestHeadersAndParametersTest::testAssertGetCitiesInvalidAcceptCharsetReturns406";i:4;s:82:"RequestHeadersAndParametersTest::testAssertVoidContentTypeOnPostRequestsReturns415";i:4;s:85:"RequestHeadersAndParametersTest::testAssertInvalidContentTypeOnPostRequestsReturns415";i:4;s:101:"RequestHeadersAndParametersTest::testAssertValidContentTypeWithInvalidCharsetOnPostRequestsReturns415";i:3;s:99:"RequestHeadersAndParametersTest::testAssertValidContentTypeWithUnsetCharsetOnPostRequestsReturns415";i:4;s:110:"RequestHeadersAndParametersTest::testAssertVoidAcceptCharsetAndValidAcceptWithInvalidImplicitCharsetReturns406";i:3;s:62:"RequestValidationTest::testAssertVoidStrictJsonInputResurns400";i:3;s:75:"RequestValidationJsonInputsTest::testAssertInvalidStrictJsonInputReturns400";i:3;s:84:"RequestValidationJsonInputsTest::testAssertMissingFieldFromStrictJsonInputReturns422";i:3;s:44:"RoutingTest::testAssertUnexistingRouteIsNull";i:4;s:55:"RoutingTest::testAssertInvalidStrictJsonInputReturns400";i:4;s:65:"RoutingTest::testAssertMissingFieldsFromStrictJsonInputReturns422";i:4;s:66:"RoutingTest::testAssertUnexpectedFieldsInStrictJsonInputReturns422";i:4;s:65:"RoutingTest::testAssertInvalidFieldsFromStrictJsonInputReturns422";i:4;s:57:"RoutingTest::testAssertInvalidFlexibleJsonInputReturns400";i:4;s:68:"RoutingTest::testAssertUnexpectedFieldsInFlexibleJsonInputReturns422";i:4;s:58:"RoutingTest::testAssertWeCatchValidRoutesWithInvalidMethod";i:4;s:46:"RoutingTest::testAssertWeGetValidCallableRoute";i:3;s:83:"RoutingTest::testAssertWeGetValidControllerRouteWithCorrectControllerAndMethodNames";i:3;}s:5:"times";a:70:{s:56:"CityFactoryTest::testAssertWeCanDetectInvalidCoordinates";d:0.006;s:53:"CityFactoryTest::testAssertCreationFromInputIsCorrect";d:0.002;s:59:"CityFactoryTest::testAssertCreationFromAnotherCityIsCorrect";d:0.001;s:31:"CityModelTest::testWeCanGetName";d:0;s:35:"CityModelTest::testWeCanGetLatitude";d:0;s:36:"CityModelTest::testWeCanGetLongitude";d:0;s:38:"CityModelTest::testCorrectJsonEncoding";d:0;s:43:"PaginationTest::testAssertGetLimitIsCorrect";d:0.001;s:7:"Warning";d:0.001;s:33:"SampleTest::testTrueAssertsToTrue";d:0;s:32:"SampleTest::that_assert_contains";d:0;s:76:"PaginationTest::testAssertCurrentPageAfterSettingPaginatedResultSetIsCorrect";d:0;s:79:"PaginationTest::testAssertCurrentPageAfterSettingNonPaginatedResultSetIsCorrect";d:0;s:48:"RequestHeadersAndParametersTest::testStopWarning";d:0;s:73:"PaginationTest::testAssertNumPagesAfterSettingPaginatedResultSetIsCorrect";d:0.001;s:73:"PaginationTest::testAssertPrevPageAfterSettingPaginatedResultSetIsCorrect";d:0;s:73:"PaginationTest::testAssertNextPageAfterSettingPaginatedResultSetIsCorrect";d:0.001;s:75:"PaginationTest::testAssertNumPagesAfterSettingUnpaginatedResultSetIsCorrect";d:0;s:78:"PaginationTest::testAssertCurrentPageAfterSettingUnpaginatedResultSetIsCorrect";d:0;s:75:"PaginationTest::testAssertPrevPageAfterSettingUnpaginatedResultSetIsCorrect";d:0;s:75:"PaginationTest::testAssertNextPageAfterSettingUnpaginatedResultSetIsCorrect";d:0;s:82:"RequestHeadersAndParametersTest::testAssertGetCitiesInvalidAcceptCharsetReturns406";d:0.003;s:82:"RequestHeadersAndParametersTest::testAssertVoidContentTypeOnPostRequestsReturns415";d:0;s:85:"RequestHeadersAndParametersTest::testAssertInvalidContentTypeOnPostRequestsReturns415";d:0;s:99:"RequestHeadersAndParametersTest::testAssertValidContentTypeWithUnsetCharsetOnPostRequestsReturns415";d:0;s:101:"RequestHeadersAndParametersTest::testAssertValidContentTypeWithInvalidCharsetOnPostRequestsReturns415";d:0;s:66:"RequestHeadersAndParametersTest::testAssertInvalidAcceptReturns406";d:0.001;s:73:"RequestHeadersAndParametersTest::testAssertInvalidAcceptCharsetReturns406";d:0.002;s:98:"RequestHeadersAndParametersTest::testAssertValidContentTypeWithVoidCharsetOnPostRequestsReturns415";d:0;s:107:"RequestHeadersAndParametersTest::testAssertVoidAcceptCharsetAndValidAcceptWithVoidImplicitCharsetReturns406";d:0;s:110:"RequestHeadersAndParametersTest::testAssertVoidAcceptCharsetAndValidAcceptWithInvalidImplicitCharsetReturns406";d:0;s:111:"RequestHeadersAndParametersTest::testAssertValidAcceptCharsetAndValidAcceptWithInvalidImplicitCharsetIsASuccess";d:0;s:63:"RequestValidationTest::testAssertInvalidAcceptCharsetReturns406";d:0.008;s:72:"RequestValidationTest::testAssertVoidContentTypeOnPostRequestsReturns415";d:0.001;s:75:"RequestValidationTest::testAssertInvalidContentTypeOnPostRequestsReturns415";d:0.001;s:88:"RequestValidationTest::testAssertValidContentTypeWithVoidCharsetOnPostRequestsReturns415";d:0;s:91:"RequestValidationTest::testAssertValidContentTypeWithInvalidCharsetOnPostRequestsReturns415";d:0.001;s:56:"RequestValidationTest::testAssertInvalidAcceptReturns406";d:0.001;s:97:"RequestValidationTest::testAssertVoidAcceptCharsetAndValidAcceptWithVoidImplicitCharsetReturns406";d:0;s:100:"RequestValidationTest::testAssertVoidAcceptCharsetAndValidAcceptWithInvalidImplicitCharsetReturns406";d:0.001;s:101:"RequestValidationTest::testAssertValidAcceptCharsetAndValidAcceptWithInvalidImplicitCharsetIsASuccess";d:0;s:62:"RequestValidationTest::testAssertVoidStrictJsonInputResurns400";d:0.015;s:70:"RequestValidationHeadersTest::testAssertInvalidAcceptCharsetReturns406";d:0.006;s:79:"RequestValidationHeadersTest::testAssertVoidContentTypeOnPostRequestsReturns415";d:0;s:82:"RequestValidationHeadersTest::testAssertInvalidContentTypeOnPostRequestsReturns415";d:0.001;s:95:"RequestValidationHeadersTest::testAssertValidContentTypeWithVoidCharsetOnPostRequestsReturns415";d:0;s:98:"RequestValidationHeadersTest::testAssertValidContentTypeWithInvalidCharsetOnPostRequestsReturns415";d:0.001;s:63:"RequestValidationHeadersTest::testAssertInvalidAcceptReturns406";d:0.002;s:104:"RequestValidationHeadersTest::testAssertVoidAcceptCharsetAndValidAcceptWithVoidImplicitCharsetReturns406";d:0;s:107:"RequestValidationHeadersTest::testAssertVoidAcceptCharsetAndValidAcceptWithInvalidImplicitCharsetReturns406";d:0.001;s:108:"RequestValidationHeadersTest::testAssertValidAcceptCharsetAndValidAcceptWithInvalidImplicitCharsetIsASuccess";d:0.001;s:75:"RequestValidationJsonInputsTest::testAssertInvalidStrictJsonInputReturns400";d:0.001;s:84:"RequestValidationJsonInputsTest::testAssertMissingFieldFromStrictJsonInputReturns422";d:0.001;s:84:"RequestValidationJsonInputsTest::testAssertInvalidFieldFromStrictJsonInputReturns422";d:0.001;s:85:"RequestValidationJsonInputsTest::testAssertMissingFieldsFromStrictJsonInputReturns422";d:0.001;s:85:"RequestValidationJsonInputsTest::testAssertUnexpectedFieldInStrictJsonInputReturns422";d:0.001;s:85:"RequestValidationJsonInputsTest::testAssertInvalidFieldsFromStrictJsonInputReturns422";d:0.001;s:77:"RequestValidationJsonInputsTest::testAssertInvalidFlexibleJsonInputReturns400";d:0;s:86:"RequestValidationJsonInputsTest::testAssertUnexpectedFieldsInStrictJsonInputReturns422";d:0;s:88:"RequestValidationJsonInputsTest::testAssertUnexpectedFieldsInFlexibleJsonInputReturns422";d:0;s:44:"RoutingTest::testAssertUnexistingRouteIsNull";d:0.001;s:55:"RoutingTest::testAssertInvalidStrictJsonInputReturns400";d:0.001;s:65:"RoutingTest::testAssertMissingFieldsFromStrictJsonInputReturns422";d:0.001;s:66:"RoutingTest::testAssertUnexpectedFieldsInStrictJsonInputReturns422";d:0.001;s:65:"RoutingTest::testAssertInvalidFieldsFromStrictJsonInputReturns422";d:0;s:57:"RoutingTest::testAssertInvalidFlexibleJsonInputReturns400";d:0;s:68:"RoutingTest::testAssertUnexpectedFieldsInFlexibleJsonInputReturns422";d:0.001;s:58:"RoutingTest::testAssertWeCatchValidRoutesWithInvalidMethod";d:0.001;s:46:"RoutingTest::testAssertWeGetValidCallableRoute";d:0.001;s:83:"RoutingTest::testAssertWeGetValidControllerRouteWithCorrectControllerAndMethodNames";d:0.001;}}}