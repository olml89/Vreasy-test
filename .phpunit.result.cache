C:37:"PHPUnit\Runner\DefaultTestResultCache":3498:{a:2:{s:7:"defects";a:10:{s:43:"PaginationTest::testAssertGetLimitIsCorrect";i:4;s:7:"Warning";i:6;s:78:"PaginationTest::testAssertCurrentPageAfterSettingUnpaginatedResultSetIsCorrect";i:3;s:75:"PaginationTest::testAssertPrevPageAfterSettingUnpaginatedResultSetIsCorrect";i:3;s:82:"RequestHeadersAndParametersTest::testAssertGetCitiesInvalidAcceptCharsetReturns406";i:4;s:82:"RequestHeadersAndParametersTest::testAssertVoidContentTypeOnPostRequestsReturns415";i:4;s:85:"RequestHeadersAndParametersTest::testAssertInvalidContentTypeOnPostRequestsReturns415";i:4;s:101:"RequestHeadersAndParametersTest::testAssertValidContentTypeWithInvalidCharsetOnPostRequestsReturns415";i:3;s:99:"RequestHeadersAndParametersTest::testAssertValidContentTypeWithUnsetCharsetOnPostRequestsReturns415";i:4;s:110:"RequestHeadersAndParametersTest::testAssertVoidAcceptCharsetAndValidAcceptWithInvalidImplicitCharsetReturns406";i:3;}s:5:"times";a:32:{s:56:"CityFactoryTest::testAssertWeCanDetectInvalidCoordinates";d:0.002;s:53:"CityFactoryTest::testAssertCreationFromInputIsCorrect";d:0;s:59:"CityFactoryTest::testAssertCreationFromAnotherCityIsCorrect";d:0;s:31:"CityModelTest::testWeCanGetName";d:0;s:35:"CityModelTest::testWeCanGetLatitude";d:0;s:36:"CityModelTest::testWeCanGetLongitude";d:0;s:38:"CityModelTest::testCorrectJsonEncoding";d:0;s:43:"PaginationTest::testAssertGetLimitIsCorrect";d:0;s:7:"Warning";d:0.001;s:33:"SampleTest::testTrueAssertsToTrue";d:0;s:32:"SampleTest::that_assert_contains";d:0;s:76:"PaginationTest::testAssertCurrentPageAfterSettingPaginatedResultSetIsCorrect";d:0;s:79:"PaginationTest::testAssertCurrentPageAfterSettingNonPaginatedResultSetIsCorrect";d:0;s:48:"RequestHeadersAndParametersTest::testStopWarning";d:0;s:73:"PaginationTest::testAssertNumPagesAfterSettingPaginatedResultSetIsCorrect";d:0;s:73:"PaginationTest::testAssertPrevPageAfterSettingPaginatedResultSetIsCorrect";d:0;s:73:"PaginationTest::testAssertNextPageAfterSettingPaginatedResultSetIsCorrect";d:0;s:75:"PaginationTest::testAssertNumPagesAfterSettingUnpaginatedResultSetIsCorrect";d:0;s:78:"PaginationTest::testAssertCurrentPageAfterSettingUnpaginatedResultSetIsCorrect";d:0;s:75:"PaginationTest::testAssertPrevPageAfterSettingUnpaginatedResultSetIsCorrect";d:0;s:75:"PaginationTest::testAssertNextPageAfterSettingUnpaginatedResultSetIsCorrect";d:0;s:82:"RequestHeadersAndParametersTest::testAssertGetCitiesInvalidAcceptCharsetReturns406";d:0.003;s:82:"RequestHeadersAndParametersTest::testAssertVoidContentTypeOnPostRequestsReturns415";d:0;s:85:"RequestHeadersAndParametersTest::testAssertInvalidContentTypeOnPostRequestsReturns415";d:0;s:99:"RequestHeadersAndParametersTest::testAssertValidContentTypeWithUnsetCharsetOnPostRequestsReturns415";d:0;s:101:"RequestHeadersAndParametersTest::testAssertValidContentTypeWithInvalidCharsetOnPostRequestsReturns415";d:0;s:66:"RequestHeadersAndParametersTest::testAssertInvalidAcceptReturns406";d:0.001;s:73:"RequestHeadersAndParametersTest::testAssertInvalidAcceptCharsetReturns406";d:0.002;s:98:"RequestHeadersAndParametersTest::testAssertValidContentTypeWithVoidCharsetOnPostRequestsReturns415";d:0;s:107:"RequestHeadersAndParametersTest::testAssertVoidAcceptCharsetAndValidAcceptWithVoidImplicitCharsetReturns406";d:0;s:110:"RequestHeadersAndParametersTest::testAssertVoidAcceptCharsetAndValidAcceptWithInvalidImplicitCharsetReturns406";d:0;s:111:"RequestHeadersAndParametersTest::testAssertValidAcceptCharsetAndValidAcceptWithInvalidImplicitCharsetIsASuccess";d:0;}}}